install.packages("vistime")
vistime(dat, events="Position", groups="Name", title="Presidents of the USA")
setwd("~/Documents/Thesis/Proposal")
source('~/Documents/Thesis/Proposal/Gant_chart.R')
install.packages("vistime")
source('~/Documents/Thesis/Proposal/Gant_chart.R')
install.packages("plotly")
source('~/Documents/Thesis/Proposal/Gant_chart.R')
source('~/Documents/Thesis/Proposal/Gant_chart.R')
source('~/Documents/Thesis/Proposal/Gant_chart.R')
source('~/Documents/Thesis/Proposal/Gant_chart.R')
source('~/Documents/Thesis/Proposal/Gant_chart.R')
install.packages("googleVis")
#clear environments
rm(list=ls())
require(googleVis)
datTL <- data.frame(Position=c(rep("President", 3), rep("Vice", 3)),
Name=c("Washington", "Adams", "Jefferson",
"Adams", "Jefferson", "Burr"),
start=as.Date(x=rep(c("1789-03-29", "1797-02-03",
"1801-02-03"),2)),
end=as.Date(x=rep(c("1797-02-03", "1801-02-03",
"1809-02-03"),2)))
Timeline <- gvisTimeline(data=datTL,
rowlabel="Name",
barlabel="Position",
start="start",
end="end",
options=list(timeline="{groupByRowLabel:false}",
backgroundColor='#ffd',
height=350,
colors="['#cbb69d', '#603913', '#c69c6e']"))
plot(Timeline)
#clear environments
rm(list=ls())
library(reshape2)
library(ggplot2)
tasks <- c("Review literature", "Mung data", "Stats analysis", "Write Report")
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2010-08-24", "2010-10-01", "2010-11-01", "2011-02-14")),
end.date    = as.Date(c("2010-10-31", "2010-12-14", "2011-02-28", "2011-04-30")),
is.critical = c(TRUE, FALSE, FALSE, TRUE)
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
ggplot(mdfr, aes(value, name, colour = is.critical)) +
geom_line(size = 6) +
xlab(NULL) +
ylab(NULL)
#clear environments
rm(list=ls())
library(reshape2)
library(ggplot2)
# Initialize tasks
tasks <- c("Review literature",
"Data Exploration",
"Develop Model",
"Model fitting",
"Finalize Model",
"Model fitting to Extended Dataset",
"Final Push",
"Thesis Write-Up")
# Dataframe creation
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2019-04-08", "2019-05-01", "2019-05-13", "2019-05-31","2019-07-01", "2019-07-08", "2019-07-15", "2019-05-01")),
end.date    = as.Date(c("2019-04-30", "2019-05-10", "2011-06-13", "2011-06-31","2019-07-08", "2019-07-15", "2019-08-29", "2019-08-29"))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
ggplot(mdfr, aes(value, name, colour = blue)) +
geom_line(size = 6) +
xlab(NULL) +
ylab(NULL)
ggplot(mdfr, aes(value, name, colour = "blue")) +
geom_line(size = 6) +
xlab(NULL) +
ylab(NULL)
# Dataframe creation
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2019-04-08", "2019-05-01", "2019-05-13", "2019-05-31","2019-07-01", "2019-07-08", "2019-07-15", "2019-05-01")),
end.date    = as.Date(c("2019-04-30", "2019-05-10", "2019-06-13", "2019-06-31","2019-07-08", "2019-07-15", "2019-08-29", "2019-08-29"))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
xlab(NULL) +
ylab(NULL)
# Dataframe creation
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2019-04-08", "2019-05-01", "2019-05-13", "2019-05-13","2019-07-01", "2019-07-08", "2019-07-15", "2019-05-01")),
end.date    = as.Date(c("2019-04-30", "2019-05-10", "2019-06-13", "2019-06-31","2019-07-08", "2019-07-15", "2019-08-29", "2019-08-29"))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Initialize tasks
tasks <- c("Review Literature",
"Data Exploration",
"Develop Model",
"Model fitting",
"Finalize Model",
"Refit to Extended Dataset",
"Final Push",
"Thesis Write-Up")
# Dataframe creation
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2019-04-08", "2019-05-01", "2019-05-13", "2019-05-13","2019-07-01", "2019-07-08", "2019-07-15", "2019-05-01")),
end.date    = as.Date(c("2019-04-30", "2019-05-10", "2019-06-13", "2019-06-31","2019-07-08", "2019-07-15", "2019-08-29", "2019-08-29"))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Initialize tasks
tasks <- c("Review Literature",
"Data Exploration",
"Develop Model",
"Model fitting",
"Finalize Model",
"Final Push",
"Thesis Write-Up")
# Dataframe creation
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2019-04-08", "2019-05-01", "2019-05-13", "2019-05-13","2019-07-01", "2019-07-15", "2019-05-01")),
end.date    = as.Date(c("2019-04-30", "2019-05-10", "2019-06-13", "2019-06-31","2019-07-15", "2019-08-29", "2019-08-29"))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Dataframe creation
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2019-04-08", "2019-05-01", "2019-05-13", "2019-05-14","2019-07-01", "2019-07-15", "2019-05-01")),
end.date    = as.Date(c("2019-04-30", "2019-05-10", "2019-06-13", "2019-06-31","2019-07-15", "2019-08-29", "2019-08-29"))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
scale_x_continuous() +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
scale_x_continuous(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
coord_cartesian(limits = c(0, 500))
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
coord_cartesian() +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Initialize tasks
tasks <- c("Review Literature",
"Data Exploration",
"Develop Model",
"Model fitting",
"Finalize Model",
"Final Push",
"Thesis Write-Up")
# Dataframe creation
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2019-04-08", "2019-05-01", "2019-05-13", "2019-06-14","2019-07-01", "2019-07-15", "2019-05-01")),
end.date    = as.Date(c("2019-04-30", "2019-05-10", "2019-06-13", "2019-06-31","2019-07-15", "2019-08-29", "2019-08-29"))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
#coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Initialize tasks
tasks <- c("Review Literature",
"Data Exploration",
"Develop Model",
"Model fitting",
"Finalize Model",
"Final Push",
"Thesis Write-Up")
# Dataframe creation
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2019-04-08", "2019-05-01", "2019-05-13", "2019-06-14","2019-07-01", "2019-07-15", "2019-05-01")),
end.date    = as.Date(c("2019-04-30", "2019-05-10", "2019-06-13", "2019-06-31","2019-07-15", "2019-08-29", "2019-08-29"))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
#coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Dataframe creation
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2019-04-08", "2019-05-01", "2019-05-13", "2019-05-13","2019-07-01", "2019-07-15", "2019-05-01")),
end.date    = as.Date(c("2019-04-30", "2019-05-10", "2019-06-13", "2019-06-31","2019-07-15", "2019-08-29", "2019-08-29"))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
#coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 9) +
#coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
#coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Initialize tasks
tasks <- c("Review Literature",
"Data Exploration",
"Develop Model",
#"Model fitting",
"Finalize Model",
"Final Push",
"Thesis Write-Up")
# Dataframe creation
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2019-04-08", "2019-05-01", "2019-05-13", "2019-05-13", "2019-07-15", "2019-05-01")),
end.date    = as.Date(c("2019-04-30", "2019-05-10", "2019-06-13","2019-07-15", "2019-08-29", "2019-08-29"))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
#coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Initialize tasks
tasks <- c("Review Literature",
"Data Exploration",
"Develop Model",
"Model Fitting",
"Final Push",
"Thesis Write-Up")
# Dataframe creation
dfr <- data.frame(
name        = factor(tasks, levels = tasks),
start.date  = as.Date(c("2019-04-08", "2019-05-01", "2019-05-13", "2019-05-13", "2019-07-15", "2019-05-01")),
end.date    = as.Date(c("2019-04-30", "2019-05-10", "2019-06-13","2019-07-15", "2019-08-29", "2019-08-29"))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6) +
#coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "blue") +
#coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "lightblue") +
#coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "turquoise") +
#coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
# Generate gant chart
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "deepskyblue2") +
#coord_cartesian(limits = c(0,500)) +
xlab(NULL) +
ylab(NULL) +
theme_light()
png("../Data/gant.png")
print(ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "deepskyblue2") +
xlab(NULL) +
ylab(NULL) +
theme_light())
dev.off()
png("../Data/gantt.png")
print(ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "deepskyblue2") +
xlab(NULL) +
ylab(NULL) +
theme_light())
dev.off()
source('~/Documents/Thesis/Proposal/Code/Gant_chart.R')
?png
png("../Data/gantt.png")
print(ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "deepskyblue2") +
xlab(NULL) +
ylab(NULL) +
theme_light())
dev.off()
png(filename = "../Data/gantt.png")
print(ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "deepskyblue2") +
xlab(NULL) +
ylab(NULL) +
theme_light())
dev.off()
png(filename = "gantt.png")
print(ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "deepskyblue2") +
xlab(NULL) +
ylab(NULL) +
theme_light())
dev.off()
png(filename = "Data/gantt.png")
print(ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "deepskyblue2") +
xlab(NULL) +
ylab(NULL) +
theme_light())
dev.off()
getwd
getwd()
source('~/Documents/Thesis/Proposal/Code/Gantt_chart.R')
png(filename = "Data/gantt.png", res = 300)
print(ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "deepskyblue2") +
xlab(NULL) +
ylab(NULL) +
theme_light())
dev.off()
source('~/Documents/Thesis/Proposal/Code/Gantt_chart.R')
ggplot(mdfr, aes(value, name)) +
geom_line(size = 6, color = "deepskyblue2") +
xlab(NULL) +
ylab(NULL) +
theme_bw()
source('~/Documents/Thesis/Proposal/Code/Gantt_chart.R')
